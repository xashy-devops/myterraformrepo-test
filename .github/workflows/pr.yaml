name: Terraform CI with OIDC

on:
  push:
    branches:
      - main
    paths:
      - "terraform-projects/**"
    
  pull_request:
    branches:
      - main
    paths:
      - "terraform-projects/**"
    

permissions:
  id-token: write
  contents: read

env: 
  TF_IN_AUTOMATION: 1
  AWS_REGION: us-east-2 

jobs:
  terraform:
    name: Terraform ${{ matrix.terraform_folder }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        terraform_folder: ["terraform-projects/dev", "terraform-projects/prod"]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Ensure all history is fetched to find changed files

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.11  # Specify the Terraform version

      - name: Set AWS Environment and Role
        run: |
          if [[ "${{ matrix.terraform_folder }}" == "terraform-projects/dev" ]]; then
            echo "AWS_ENVIRONMENT=dev" >> $GITHUB_ENV
            echo "AWS_ROLE_ARN=arn:aws:iam::975050274549:role/mygithubrole" >> $GITHUB_ENV
          elif [[ "${{ matrix.terraform_folder }}" == "terraform-projects/prod" ]]; then
            echo "AWS_ENVIRONMENT=prod" >> $GITHUB_ENV
            echo "AWS_ROLE_ARN=arn:aws:iam::487563750579:role/prod-role" >> $GITHUB_ENV
          else
            echo "Invalid terraform_folder"
            exit 1
          fi 

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2  # Configure AWS credentials using OIDC
        with:
          aws-region: ${{ env.AWS_REGION }}

      - name: Find Changed Directories
        id: find_changed_dirs
        run: |
          # Use git diff to find changed directories
          CHANGED_DIRS=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^terraform-projects/' | cut -d/ -f1-2 | sort -u)
          echo "::set-output name=changed_dirs::$CHANGED_DIRS"

      - name: Terraform Init, Validate, Plan
        if: steps.find_changed_dirs.outputs.changed_dirs != ''
        run: |
          IFS=',' read -r -a dirs <<< "${{ steps.find_changed_dirs.outputs.changed_dirs }}"
          for dir in "${dirs[@]}"; do
            echo -e "\033[1;34mStarting Terraform operations for directory: $dir\033[0m"  # Bold Blue
            cd "$dir"
            
            echo -e "\033[1;32mDoing terraform init in $dir\033[0m"  # Bold Green
            terraform init
            
            echo -e "\033[1;32mDoing terraform validate in $dir\033[0m"  # Bold Green
            terraform validate
            
            echo -e "\033[1;33mDoing terraform plan in $dir\033[0m"  # Bold Yellow
            terraform plan -lock=false | tee /tmp/plan_${dir//\//_}.log
            
            echo -e "\033[1;34mCompleted Terraform operations for directory: $dir\033[0m"  # Bold Blue
            cd -
          done

      - name: Display Terraform Plan Logs
        run: |
          IFS=',' read -r -a dirs <<< "${{ steps.find_changed_dirs.outputs.changed_dirs }}"
          for dir in "${dirs[@]}"; do
            echo -e "\033[1;35mDisplaying Terraform plan log for $dir\033[0m"  # Bold Magenta
            cat /tmp/plan_${dir//\//_}.log
          done

      - name: Terraform Apply
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && steps.find_changed_dirs.outputs.changed_dirs != ''
        run: |
          IFS=',' read -r -a dirs <<< "${{ steps.find_changed_dirs.outputs.changed_dirs }}"
          for dir in "${dirs[@]}"; do
            echo -e "\033[1;34mApplying Terraform for directory: $dir\033[0m"  # Bold Blue
            cd "$dir"
            terraform apply -input=false -auto-approve tfplan
            cd -
          done
