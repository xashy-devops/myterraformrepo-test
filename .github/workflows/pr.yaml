name: Terraform CI with OIDC

on:
  push:
    branches:
      - main
    paths:
      - "terraform-projects/**"
  pull_request:
    branches:
      - main
    paths:
      - "terraform-projects/**"

env: 
  TF_IN_AUTOMATION: 1
  AWS_REGION: us-east-2 

jobs:
  terraform:
    name: Terraform ${{ matrix.terraform_folder }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        terraform_folder: ["terraform-projects/dev", "terraform-projects/prod"]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.11

      - name: Set AWS Environment
        run: |
          if [[ "${{ matrix.terraform_folder }}" == "terraform-projects/dev" ]]; then
            echo "AWS_ENVIRONMENT=dev" >> $GITHUB_ENV
            echo "AWS_ROLE_ARN=arn:aws:iam::YOUR_DEV_ACCOUNT_ID:role/YOUR_DEV_ROLE_NAME" >> $GITHUB_ENV 
          elif [[ "${{ matrix.terraform_folder }}" == "terraform-projects/prod" ]]; then
            echo "AWS_ENVIRONMENT=prod" >> $GITHUB_ENV
            echo "AWS_ROLE_ARN=arn:aws:iam::YOUR_PROD_ACCOUNT_ID:role/YOUR_PROD_ROLE_NAME" >> $GITHUB_ENV 
          else
            echo "Invalid terraform_folder"
            exit 1
          fi 

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Find Changed Directories
        id: find_changed_dirs
        run: |
          echo "Checking for changes in terraform-projects/${{ env.AWS_ENVIRONMENT }}/"
          changed_dirs=()
          base_sha="${{ github.event.pull_request.base.sha || github.event.before }}"

          # Find all subdirectories in terraform-projects/${{ env.AWS_ENVIRONMENT }}/
          for dir in terraform-projects/${{ env.AWS_ENVIRONMENT }}/*/; do 
            if [[ -d "$dir" ]]; then
              echo "Checking directory: $dir"
              # Check if there are any changes in this directory
              if [[ -n $(git diff --name-only $base_sha ${{ github.sha }} "$dir") ]]; then
                changed_dirs+=("${dir%/}") # Remove trailing slash for output
              fi
            fi
          done

          # Join the array into a single string with a delimiter
          changed_dirs_str=$(IFS=,; echo "${changed_dirs[*]}")
          echo "changed_dirs=$changed_dirs_str" >> $GITHUB_OUTPUT
  
      - name: Terraform Init, Validate, Plan
        if: steps.find_changed_dirs.outputs.changed_dirs != ''
        run: |
          IFS=',' read -r -a dirs <<< "${{ steps.find_changed_dirs.outputs.changed_dirs }}"
          for dir in "${dirs[@]}"; do
            echo -e "\033[1;34mStarting Terraform operations for directory: $dir\033[0m"  # Bold Blue
            pushd "$dir"
            terraform init -input=false
            terraform validate -no-color
            terraform plan -input=false -out=tfplan -lock=false | tee /tmp/plan_${dir//\//_}.log
            popd # Switch back to original directory
          done

      - name: Display Terraform Plan Logs
        if: steps.find_changed_dirs.outputs.changed_dirs != ''
        run: |
          IFS=',' read -r -a dirs <<< "${{ steps.find_changed_dirs.outputs.changed_dirs }}"
          for dir in "${dirs[@]}"; do
            echo -e "\033[1;35mDisplaying Terraform plan log for $dir\033[0m"  # Bold Magenta
            cat /tmp/plan_${dir//\//_}.log
          done

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && matrix.terraform_folder == 'terraform-projects/prod' && steps.find_changed_dirs.outputs.changed_dirs != ''
        run: |
          IFS=',' read -r -a dirs <<< "${{ steps.find_changed_dirs.outputs.changed_dirs }}"
          for dir in "${dirs[@]}"; do
            echo -e "\033[1;31mApplying Terraform changes in $dir\033[0m"  # Bold Red
            pushd "$dir"
            terraform apply -input=false -auto-approve tfplan
            popd 
          done 
